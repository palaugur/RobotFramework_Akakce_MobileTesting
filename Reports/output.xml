<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.11.4 on win32)" generated="20230714 14:49:59.999" rpa="false" schemaversion="4">
<suite id="s1" name="Tests" source="C:\Users\Ugur\PycharmProjects\AppiumProjectAkakce\Tests">
<suite id="s1-s1" name="Accounts" source="C:\Users\Ugur\PycharmProjects\AppiumProjectAkakce\Tests\Accounts.robot">
<test id="s1-s1-t1" name="Login With Standard User" line="15">
<kw name="Open Akakce Application" library="common" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${execution_env}"=="local"</arg>
<arg>Open Akakce Application In Local</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Open Akakce Application In Local" library="common">
<kw name="Open Application" library="AppiumLibrary">
<arg>remote_url=http://localhost:4723</arg>
<arg>platformName=Android</arg>
<arg>platformVersion=11.0</arg>
<arg>deviceName=emulator</arg>
<arg>appPackage=com.akakce.akakce</arg>
<arg>appActivity=com.akakce.akakce.ui.splash.SplashActivity</arg>
<arg>automationName=Uiautomator2</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://github.com/appium/appium/blob/master/docs/en/writing-running-appium/server-args.md
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" starttime="20230714 14:50:00.614" endtime="20230714 14:50:09.507"/>
</kw>
<status status="PASS" starttime="20230714 14:50:00.614" endtime="20230714 14:50:09.507"/>
</kw>
<status status="PASS" starttime="20230714 14:50:00.614" endtime="20230714 14:50:09.507"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${execution_env}"=="browserstack"</arg>
<arg>Open Akakce Application In BrowserStack</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230714 14:50:09.507" endtime="20230714 14:50:09.507"/>
</kw>
<status status="PASS" starttime="20230714 14:50:00.613" endtime="20230714 14:50:09.507"/>
</kw>
<kw name="Close Popup Message" library="common">
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>${pop_up_message}</arg>
<arg>timeout=15</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<msg timestamp="20230714 14:50:12.579" level="INFO">criteria is framePopupLyt
criteria is framePopupLyt
criteria is framePopupLyt</msg>
<status status="PASS" starttime="20230714 14:50:09.508" endtime="20230714 14:50:12.579"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>${pop_up_message}</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20230714 14:50:12.582" level="INFO">Clicking element 'id=framePopupLyt'.</msg>
<msg timestamp="20230714 14:50:13.928" level="INFO">criteria is framePopupLyt</msg>
<status status="PASS" starttime="20230714 14:50:12.579" endtime="20230714 14:50:13.929"/>
</kw>
<status status="PASS" starttime="20230714 14:50:09.508" endtime="20230714 14:50:13.929"/>
</kw>
<kw name="Click on User Icon" library="home_page">
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>${user_icon}</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<msg timestamp="20230714 14:50:14.005" level="INFO">criteria is rightIcon</msg>
<status status="PASS" starttime="20230714 14:50:13.929" endtime="20230714 14:50:14.005"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>${user_icon}</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20230714 14:50:14.007" level="INFO">Clicking element 'id=rightIcon'.</msg>
<msg timestamp="20230714 14:50:14.627" level="INFO">criteria is rightIcon</msg>
<status status="PASS" starttime="20230714 14:50:14.005" endtime="20230714 14:50:14.628"/>
</kw>
<status status="PASS" starttime="20230714 14:50:13.929" endtime="20230714 14:50:14.628"/>
</kw>
<kw name="Verify Login Page Displayed" library="accounts_page">
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>${login_button}</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<msg timestamp="20230714 14:50:15.024" level="INFO">criteria is login_btn</msg>
<status status="PASS" starttime="20230714 14:50:14.629" endtime="20230714 14:50:15.024"/>
</kw>
<status status="PASS" starttime="20230714 14:50:14.628" endtime="20230714 14:50:15.024"/>
</kw>
<kw name="Enter Standard User Login Credentials" library="accounts_page">
<kw name="Log To Console" library="BuiltIn">
<arg>Name and Surname = ${${user}.name} ${${user}.surname}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230714 14:50:15.025" endtime="20230714 14:50:15.027"/>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<arg>${login_username_input_field}</arg>
<arg>${${user}.email}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<msg timestamp="20230714 14:50:15.032" level="INFO">Typing text 'testuser@example.com' into text field 'id=email_edt'</msg>
<msg timestamp="20230714 14:50:15.838" level="INFO">criteria is email_edt</msg>
<status status="PASS" starttime="20230714 14:50:15.027" endtime="20230714 14:50:15.838"/>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<arg>${login_password_input_field}</arg>
<arg>${${user}.password}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<msg timestamp="20230714 14:50:15.840" level="INFO">Typing text 'Testing123!!' into text field 'id=password_edt'</msg>
<msg timestamp="20230714 14:50:17.068" level="INFO">criteria is password_edt</msg>
<status status="PASS" starttime="20230714 14:50:15.838" endtime="20230714 14:50:17.068"/>
</kw>
<status status="PASS" starttime="20230714 14:50:15.025" endtime="20230714 14:50:17.068"/>
</kw>
<kw name="Click On Login Button" library="accounts_page">
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>${login_button}</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<msg timestamp="20230714 14:50:17.615" level="INFO">criteria is login_btn</msg>
<status status="PASS" starttime="20230714 14:50:17.069" endtime="20230714 14:50:17.615"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>${login_button}</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20230714 14:50:17.617" level="INFO">Clicking element 'id=login_btn'.</msg>
<msg timestamp="20230714 14:50:18.197" level="INFO">criteria is login_btn</msg>
<status status="PASS" starttime="20230714 14:50:17.615" endtime="20230714 14:50:18.197"/>
</kw>
<status status="PASS" starttime="20230714 14:50:17.069" endtime="20230714 14:50:18.197"/>
</kw>
<kw name="Verify User Is Logged In" library="accounts_page">
<kw name="Wait Until Page Contains" library="AppiumLibrary">
<arg>Profilim</arg>
<doc>Waits until `text` appears on current page.</doc>
<status status="PASS" starttime="20230714 14:50:18.198" endtime="20230714 14:50:20.472"/>
</kw>
<status status="PASS" starttime="20230714 14:50:18.198" endtime="20230714 14:50:20.472"/>
</kw>
<kw name="Close Application" library="AppiumLibrary" type="TEARDOWN">
<doc>Closes the current application and also close webdriver session.</doc>
<status status="PASS" starttime="20230714 14:50:20.473" endtime="20230714 14:50:21.058"/>
</kw>
<tag>login</tag>
<status status="PASS" starttime="20230714 14:50:00.613" endtime="20230714 14:50:21.059"/>
</test>
<status status="PASS" starttime="20230714 14:50:00.031" endtime="20230714 14:50:21.060"/>
</suite>
<status status="PASS" starttime="20230714 14:50:00.001" endtime="20230714 14:50:21.062"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">login</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Accounts">Tests.Accounts</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
